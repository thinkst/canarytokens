name: Build
on:
  push:
    branches:
      - "T4627_py3_main"
  # workflow_dispatch:
  #   inputs:
  #     force_build:
  #       description: 'Force a build.'
  #       required: false
  #       default: false
  #       type: boolean
  # workflow_run:
  #   workflows:
  #     - TestSuite
  #   types:
  #     - completed
  #   branches:
  #     - main
  #     - T4627_py3_main

jobs:
  build:
    # if: ${{ github.event.workflow_run.conclusion == 'success' || inputs.force_build}}
    runs-on: ubuntu-latest
    env:
      AWS_REGION: 'eu-west-1'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # FIXME: Add account number via a secret / inject
            role-to-assume: arn:aws:iam::164951611079:role/Canarytokens-staging-github-action
            role-session-name: GitHubActions-${{ github.actor }}-${{ github.workflow }}-${{ github.run_id }}-${{ github.run_number }}
            aws-region: ${{ env.AWS_REGION }}
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install deps
        run: |
          curl -sSL https://install.python-poetry.org | python -
          poetry config virtualenvs.in-project true
      - name: Build python wheel
        run: |
          poetry export --extras twisted --extras web --output backend/requirements.txt
          poetry export --extras twisted --extras web --output switchboard/requirements.txt
          poetry build --format wheel
          cp dist/*.whl backend/
          cp dist/*.whl switchboard/

      - name: Copy templates
        run: |
          cp -r templates switchboard/
          cp -r templates backend/
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta (Switchboard)
        id: meta_switchboard
        uses: docker/metadata-action@v3
        with:
          images: |
            thinkst/canarytokens_switchboard
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push (Switchboard)
        id: docker_build_switchboard
        uses: docker/build-push-action@v2
        with:
          context: ./switchboard
          push: true
          tags: ${{ steps.meta_switchboard.outputs.tags }}

      - name: Docker meta (Backend)
        id: meta_backend
        uses: docker/metadata-action@v3
        with:
          images: |
            thinkst/canarytokens_backend
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push (Backend)
        id: docker_build_backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta_backend.outputs.tags }}

      - name: Build, tag, and push Backend image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: canarytokens-backend-staging
          IMAGE_TAG: ${{ github.sha }}
        run: |
          pushd backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  --build-arg COMMIT_SHA=$IMAGE_TAG  .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          popd
      - name: Build, tag, and push Backend latest image to Amazon ECR
        if: ${{github.ref == 'refs/heads/main'}}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: canarytokens-backend-staging
          IMAGE_TAG: ${{ github.sha }}
        run: |
          pushd backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg COMMIT_SHA=$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          popd
      - name: Build, tag, and push Switchboard image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: canarytokens-switchboard-staging
          IMAGE_TAG: ${{ github.sha }}
        run: |
          pushd switchboard
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg COMMIT_SHA=$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          popd

      - name: Build, tag, and push Switchboard latest image to Amazon ECR
        if: ${{github.ref == 'refs/heads/main'}}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: canarytokens-switchboard-staging
          IMAGE_TAG: ${{ github.sha }}
        run: |
          pushd switchboard
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg COMMIT_SHA=$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          popd
